// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.2
// source: megolm_ratchet.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PostDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PostDataRequest) Reset() {
	*x = PostDataRequest{}
	mi := &file_megolm_ratchet_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostDataRequest) ProtoMessage() {}

func (x *PostDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_megolm_ratchet_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostDataRequest.ProtoReflect.Descriptor instead.
func (*PostDataRequest) Descriptor() ([]byte, []int) {
	return file_megolm_ratchet_proto_rawDescGZIP(), []int{0}
}

func (x *PostDataRequest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type PostDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *PostDataResponse) Reset() {
	*x = PostDataResponse{}
	mi := &file_megolm_ratchet_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostDataResponse) ProtoMessage() {}

func (x *PostDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_megolm_ratchet_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostDataResponse.ProtoReflect.Descriptor instead.
func (*PostDataResponse) Descriptor() ([]byte, []int) {
	return file_megolm_ratchet_proto_rawDescGZIP(), []int{1}
}

func (x *PostDataResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type GetDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *GetDataRequest) Reset() {
	*x = GetDataRequest{}
	mi := &file_megolm_ratchet_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataRequest) ProtoMessage() {}

func (x *GetDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_megolm_ratchet_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataRequest.ProtoReflect.Descriptor instead.
func (*GetDataRequest) Descriptor() ([]byte, []int) {
	return file_megolm_ratchet_proto_rawDescGZIP(), []int{2}
}

func (x *GetDataRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type GetDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []string `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetDataResponse) Reset() {
	*x = GetDataResponse{}
	mi := &file_megolm_ratchet_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataResponse) ProtoMessage() {}

func (x *GetDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_megolm_ratchet_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataResponse.ProtoReflect.Descriptor instead.
func (*GetDataResponse) Descriptor() ([]byte, []int) {
	return file_megolm_ratchet_proto_rawDescGZIP(), []int{3}
}

func (x *GetDataResponse) GetData() []string {
	if x != nil {
		return x.Data
	}
	return nil
}

type AppendDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Data      string `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AppendDataRequest) Reset() {
	*x = AppendDataRequest{}
	mi := &file_megolm_ratchet_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendDataRequest) ProtoMessage() {}

func (x *AppendDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_megolm_ratchet_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendDataRequest.ProtoReflect.Descriptor instead.
func (*AppendDataRequest) Descriptor() ([]byte, []int) {
	return file_megolm_ratchet_proto_rawDescGZIP(), []int{4}
}

func (x *AppendDataRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *AppendDataRequest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type AppendDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *AppendDataResponse) Reset() {
	*x = AppendDataResponse{}
	mi := &file_megolm_ratchet_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendDataResponse) ProtoMessage() {}

func (x *AppendDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_megolm_ratchet_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendDataResponse.ProtoReflect.Descriptor instead.
func (*AppendDataResponse) Descriptor() ([]byte, []int) {
	return file_megolm_ratchet_proto_rawDescGZIP(), []int{5}
}

func (x *AppendDataResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_megolm_ratchet_proto protoreflect.FileDescriptor

var file_megolm_ratchet_proto_rawDesc = []byte{
	0x0a, 0x14, 0x6d, 0x65, 0x67, 0x6f, 0x6c, 0x6d, 0x5f, 0x72, 0x61, 0x74, 0x63, 0x68, 0x65, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x6d, 0x65, 0x67, 0x6f, 0x6c, 0x6d, 0x72, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x74, 0x22, 0x25, 0x0a, 0x0f, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x31, 0x0a, 0x10,
	0x50, 0x6f, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0x2f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x22, 0x25, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x46, 0x0a, 0x11, 0x41, 0x70, 0x70, 0x65, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x2e, 0x0a, 0x12, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x32,
	0x80, 0x02, 0x0a, 0x14, 0x4d, 0x65, 0x67, 0x6f, 0x6c, 0x6d, 0x52, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x2e, 0x6d, 0x65, 0x67, 0x6f, 0x6c, 0x6d, 0x72, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x74, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x65, 0x67, 0x6f, 0x6c, 0x6d, 0x72, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x74, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x1d, 0x2e, 0x6d, 0x65, 0x67, 0x6f, 0x6c, 0x6d, 0x72, 0x61, 0x74, 0x63, 0x68, 0x65, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x6d, 0x65, 0x67, 0x6f, 0x6c, 0x6d, 0x72, 0x61, 0x74, 0x63, 0x68, 0x65, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x51, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x2e,
	0x6d, 0x65, 0x67, 0x6f, 0x6c, 0x6d, 0x72, 0x61, 0x74, 0x63, 0x68, 0x65, 0x74, 0x2e, 0x41, 0x70,
	0x70, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x6d, 0x65, 0x67, 0x6f, 0x6c, 0x6d, 0x72, 0x61, 0x74, 0x63, 0x68, 0x65, 0x74, 0x2e,
	0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x4a, 0x6f, 0x65, 0x6c, 0x77, 0x61, 0x6c, 0x6c, 0x6b, 0x65, 0x72, 0x2f, 0x6d, 0x65, 0x67,
	0x6f, 0x6c, 0x6d, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_megolm_ratchet_proto_rawDescOnce sync.Once
	file_megolm_ratchet_proto_rawDescData = file_megolm_ratchet_proto_rawDesc
)

func file_megolm_ratchet_proto_rawDescGZIP() []byte {
	file_megolm_ratchet_proto_rawDescOnce.Do(func() {
		file_megolm_ratchet_proto_rawDescData = protoimpl.X.CompressGZIP(file_megolm_ratchet_proto_rawDescData)
	})
	return file_megolm_ratchet_proto_rawDescData
}

var file_megolm_ratchet_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_megolm_ratchet_proto_goTypes = []any{
	(*PostDataRequest)(nil),    // 0: megolmratchet.PostDataRequest
	(*PostDataResponse)(nil),   // 1: megolmratchet.PostDataResponse
	(*GetDataRequest)(nil),     // 2: megolmratchet.GetDataRequest
	(*GetDataResponse)(nil),    // 3: megolmratchet.GetDataResponse
	(*AppendDataRequest)(nil),  // 4: megolmratchet.AppendDataRequest
	(*AppendDataResponse)(nil), // 5: megolmratchet.AppendDataResponse
}
var file_megolm_ratchet_proto_depIdxs = []int32{
	0, // 0: megolmratchet.MegolmRatchetService.PostData:input_type -> megolmratchet.PostDataRequest
	2, // 1: megolmratchet.MegolmRatchetService.GetData:input_type -> megolmratchet.GetDataRequest
	4, // 2: megolmratchet.MegolmRatchetService.AppendData:input_type -> megolmratchet.AppendDataRequest
	1, // 3: megolmratchet.MegolmRatchetService.PostData:output_type -> megolmratchet.PostDataResponse
	3, // 4: megolmratchet.MegolmRatchetService.GetData:output_type -> megolmratchet.GetDataResponse
	5, // 5: megolmratchet.MegolmRatchetService.AppendData:output_type -> megolmratchet.AppendDataResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_megolm_ratchet_proto_init() }
func file_megolm_ratchet_proto_init() {
	if File_megolm_ratchet_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_megolm_ratchet_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_megolm_ratchet_proto_goTypes,
		DependencyIndexes: file_megolm_ratchet_proto_depIdxs,
		MessageInfos:      file_megolm_ratchet_proto_msgTypes,
	}.Build()
	File_megolm_ratchet_proto = out.File
	file_megolm_ratchet_proto_rawDesc = nil
	file_megolm_ratchet_proto_goTypes = nil
	file_megolm_ratchet_proto_depIdxs = nil
}
